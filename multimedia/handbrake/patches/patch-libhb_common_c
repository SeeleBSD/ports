Revert "libhb: use mask part the new FFmpeg channel layout api."
c5012478cba356b8f8f222d6acff9fe3cc74e67e

Index: libhb/common.c
--- libhb/common.c.orig
+++ libhb/common.c
@@ -2283,7 +2283,7 @@ int hb_mixdown_has_remix_support(int mixdown, uint64_t
 
         // more than 1 channel
         case HB_AMIXDOWN_STEREO:
-            return (hb_layout_get_discrete_channel_count(layout) > 1);
+            return (av_get_channel_layout_nb_channels(layout) > 1);
 
         // regular stereo (not Dolby)
         case HB_AMIXDOWN_LEFT:
@@ -2483,22 +2483,14 @@ const hb_mixdown_t* hb_mixdown_get_next(const hb_mixdo
     return ((hb_mixdown_internal_t*)last)->next;
 }
 
-void hb_layout_get_name(char *name, int size, int64_t layout)
+void hb_layout_get_name(char * name, int size, int64_t layout)
 {
-    AVChannelLayout ch_layout = {0};
-    av_channel_layout_from_mask(&ch_layout, layout);
-    av_channel_layout_describe(&ch_layout, name, size);
-    av_channel_layout_uninit(&ch_layout);
+    av_get_channel_layout_string(name, size, 0, layout);
 }
 
 int hb_layout_get_discrete_channel_count(int64_t layout)
 {
-    int nb_channels = 0;
-    AVChannelLayout ch_layout = {0};
-    av_channel_layout_from_mask(&ch_layout, layout);
-    nb_channels = ch_layout.nb_channels;
-    av_channel_layout_uninit(&ch_layout);
-    return nb_channels;
+    return av_get_channel_layout_nb_channels(layout);
 }
 
 int hb_layout_get_low_freq_channel_count(int64_t layout)
