Index: modcargo-crates/v8-0.99.0/build.rs
--- modcargo-crates/v8-0.99.0/build.rs.orig
+++ modcargo-crates/v8-0.99.0/build.rs
@@ -245,16 +245,10 @@ fn build_v8(is_asan: bool) {
   // cross-compilation setup
   if target_arch == "aarch64" {
     gn_args.push(r#"target_cpu="arm64""#.to_string());
-    gn_args.push("use_sysroot=true".to_string());
-    maybe_install_sysroot("arm64");
-    maybe_install_sysroot("amd64");
   }
   if target_arch == "arm" {
     gn_args.push(r#"target_cpu="arm""#.to_string());
     gn_args.push(r#"v8_target_cpu="arm""#.to_string());
-    gn_args.push("use_sysroot=true".to_string());
-    maybe_install_sysroot("i386");
-    maybe_install_sysroot("arm");
   }
 
   let target_triple = env::var("TARGET").unwrap();
@@ -274,7 +268,6 @@ fn build_v8(is_asan: bool) {
     gn_args.push(format!(r#"target_cpu="{}""#, arch).to_string());
     gn_args.push(r#"target_os="android""#.to_string());
     gn_args.push("treat_warnings_as_errors=false".to_string());
-    gn_args.push("use_sysroot=true".to_string());
 
     // NDK 23 and above removes libgcc entirely.
     // https://github.com/rust-lang/rust/pull/85806
@@ -363,7 +356,9 @@ fn maybe_install_sysroot(arch: &str) {
 }
 
 fn host_platform() -> String {
-  let os = if cfg!(target_os = "linux") {
+  let os = if cfg!(target_os = "openbsd") {
+    "openbsd"
+  } else if cfg!(target_os = "linux") {
     "linux"
   } else if cfg!(target_os = "macos") {
     "mac"
