Index: cli/standalone/binary.rs
--- cli/standalone/binary.rs.orig
+++ cli/standalone/binary.rs
@@ -106,7 +106,7 @@ pub struct Metadata {
 }
 
 pub fn load_npm_vfs(root_dir_path: PathBuf) -> Result<FileBackedVfs, AnyError> {
-  let file_path = current_exe().unwrap();
+  let file_path = current_exe().unwrap_or(PathBuf::from("${PREFIX}/bin/deno"));
   let mut file = std::fs::File::open(file_path)?;
   file.seek(SeekFrom::End(-(TRAILER_SIZE as i64)))?;
   let mut trailer = [0; TRAILER_SIZE];
@@ -501,7 +501,7 @@ impl<'a> DenoCompileBinaryWriter<'a> {
     let bytes = match maybe_bytes {
       Some(bytes) => bytes,
       None => {
-        log::info!("Download could not be found, aborting");
+        log::info!("Download could not be found, aborting. deno compile is unsupported on OpenBSD.");
         std::process::exit(1)
       }
     };
