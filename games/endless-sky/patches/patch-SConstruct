Remove hardcoded -O3
Install to the correct locations.

Index: SConstruct
--- SConstruct.orig
+++ SConstruct
@@ -62,8 +62,8 @@ Help(opts.GenerateHelpText(env))
 # or modify the `flags` variable:
 flags = ["-std=c++17", "-Wall", "-pedantic-errors", "-Wold-style-cast", "-fno-rtti"]
 if env["mode"] != "debug":
-	flags += ["-Werror", "-O3", "-flto"]
-	env.Append(LINKFLAGS = ["-O3", "-flto"])
+	flags += ["-flto"]
+	env.Append(LINKFLAGS = ["-flto"])
 if env["mode"] == "debug":
 	flags += ["-g"]
 elif env["mode"] == "profile":
@@ -112,9 +112,8 @@ game_libs = [
 env.Append(LIBS = game_libs)
 
 if env["opengl"] == "gles":
-	if is_windows_host:
-		print("OpenGL ES builds are not supported on Windows")
-		Exit(1)
+	print("OpenGL ES builds are not supported on Windows")
+	Exit(1)
 	env.Append(LIBS = [
 		"OpenGL",
 	])
@@ -126,7 +125,7 @@ elif is_windows_host:
 	])
 else:
 	env.Append(LIBS = [
-		"GL" if 'steamrt_scout' in chroot_name else "OpenGL",
+		"GL",
 		"GLEW",
 	])
 
@@ -194,20 +193,20 @@ env.AlwaysBuild("test")
 
 
 # Install the binary:
-env.Install("$DESTDIR$PREFIX/games", sky)
+env.Install("$PREFIX/bin", sky)
 
 # Install the desktop file:
-env.Install("$DESTDIR$PREFIX/share/applications", "io.github.endless_sky.endless_sky.desktop")
+env.Install("$PREFIX/share/applications", "io.github.endless_sky.endless_sky.desktop")
 
 # Install app center metadata:
-env.Install("$DESTDIR$PREFIX/share/metainfo", "io.github.endless_sky.endless_sky.appdata.xml")
+env.Install("$PREFIX/share/metainfo", "io.github.endless_sky.endless_sky.appdata.xml")
 
 # Install icons, keeping track of all the paths.
 # Most Ubuntu apps supply 16, 22, 24, 32, 48, and 256, and sometimes others.
 sizes = ["16x16", "22x22", "24x24", "32x32", "48x48", "128x128", "256x256", "512x512"]
 icons = []
 for size in sizes:
-	destination = "$DESTDIR$PREFIX/share/icons/hicolor/" + size + "/apps/endless-sky.png"
+	destination = "$PREFIX/share/icons/hicolor/" + size + "/apps/endless-sky.png"
 	icons.append(destination)
 	env.InstallAs(destination, "icons/icon_" + size + ".png")
 
@@ -218,14 +217,8 @@ if env.get("PREFIX").startswith("/usr/"):
 	env.Command(
 		[],
 		icons,
-		"gtk-update-icon-cache -t $DESTDIR$PREFIX/share/icons/hicolor/")
+		"gtk-update-icon-cache -t $PREFIX/share/icons/hicolor/")
 
-# Install the man page.
-env.Command(
-	"$DESTDIR$PREFIX/share/man/man6/endless-sky.6.gz",
-	"endless-sky.6",
-	"gzip -c $SOURCE > $TARGET")
-
 # Install the data files.
 def RecursiveInstall(env, target, source):
 	rootIndex = len(env.Dir(source).abspath) + 1
@@ -235,11 +228,11 @@ def RecursiveInstall(env, target, source):
 			RecursiveInstall(env, pathjoin(target, name), node.abspath)
 		else:
 			env.Install(target, node)
-RecursiveInstall(env, "$DESTDIR$PREFIX/share/games/endless-sky/data", "data")
-RecursiveInstall(env, "$DESTDIR$PREFIX/share/games/endless-sky/images", "images")
-RecursiveInstall(env, "$DESTDIR$PREFIX/share/games/endless-sky/sounds", "sounds")
-env.Install("$DESTDIR$PREFIX/share/games/endless-sky", "credits.txt")
-env.Install("$DESTDIR$PREFIX/share/games/endless-sky", "keys.txt")
+RecursiveInstall(env, "$PREFIX/share/endless-sky/data", "data")
+RecursiveInstall(env, "$PREFIX/share/endless-sky/images", "images")
+RecursiveInstall(env, "$PREFIX/share/endless-sky/sounds", "sounds")
+env.Install("$PREFIX/share/endless-sky", "credits.txt")
+env.Install("$PREFIX/share/endless-sky", "keys.txt")
 
 # Make the word "install" in the command line do an installation.
-env.Alias("install", "$DESTDIR$PREFIX")
+env.Alias("install", "$PREFIX")
