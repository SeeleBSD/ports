Don't do git.

Index: CMakeLists.txt
--- CMakeLists.txt.orig
+++ CMakeLists.txt
@@ -202,36 +202,6 @@ endif()
 # version
 
 string(TIMESTAMP OJ_DATE "%Y-%m-%d")
-include(GetGitRevisionDescription)
-git_get_exact_tag(GIT_TAG)
-# Do not include a hash, if we are building a release tag
-if(NOT GIT_TAG)
-	# otherwise concatenate a version with hash
-	git_describe(GIT_DESCRIPTION)
-	if(GIT_DESCRIPTION)
-		string(REPLACE "-" ";" GIT_DESCRIPTION ${GIT_DESCRIPTION})
-		list(LENGTH GIT_DESCRIPTION GIT_DESCRIPTION_PARTS)
-		if(GIT_DESCRIPTION_PARTS EQUAL 3)
-			list(GET GIT_DESCRIPTION 0 GIT_TAG)
-			list(GET GIT_DESCRIPTION 1 GIT_COMMITS)
-			list(GET GIT_DESCRIPTION 2 GIT_HASH)
-			set(GIT_STATUS "${GIT_COMMITS} commits since tag \"${GIT_TAG}\", ")
-			string(PREPEND GIT_COMMITS "+")
-		else()
-			# no tags found, only hash
-			list(GET GIT_DESCRIPTION 0 GIT_HASH)
-		endif()
-		# strip the g prefix
-		string(SUBSTRING ${GIT_HASH} 1 -1 GIT_HASH)
-		set(OJ_VERSION_GIT "git${GIT_COMMITS}@${GIT_HASH}")
-		string(APPEND GIT_STATUS "object hash is ${GIT_HASH}")
-		git_local_changes(GIT_DIRTY)
-		if(GIT_DIRTY STREQUAL "DIRTY")
-			string(APPEND OJ_VERSION_GIT "-dirty")
-			string(APPEND GIT_STATUS ", with uncommitted changes")
-		endif()
-	endif()
-endif()
 set_property(SOURCE src/version.cpp PROPERTY COMPILE_DEFINITIONS
 	OJ_VERSION="${PROJECT_VERSION}"; OJ_DATE="${OJ_DATE}";
 	$<$<BOOL:${OJ_VERSION_GIT}>:OJ_VERSION_GIT="${OJ_VERSION_GIT}">)
