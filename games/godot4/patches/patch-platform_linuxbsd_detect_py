add sndio driver

Index: platform/linuxbsd/detect.py
--- platform/linuxbsd/detect.py.orig
+++ platform/linuxbsd/detect.py
@@ -42,6 +42,7 @@ def get_opts():
         BoolVariable("use_sowrap", "Dynamically load system libraries", True),
         BoolVariable("alsa", "Use ALSA", True),
         BoolVariable("pulseaudio", "Use PulseAudio", True),
+        BoolVariable("sndio", "Detect and use sndio", True),
         BoolVariable("dbus", "Use D-Bus to handle screensaver and portal desktop settings", True),
         BoolVariable("speechd", "Use Speech Dispatcher for Text-to-Speech support", True),
         BoolVariable("fontconfig", "Use fontconfig for system fonts support", True),
@@ -337,6 +338,12 @@ def configure(env: "Environment"):
         else:
             env.Append(CPPDEFINES=["PULSEAUDIO_ENABLED", "_REENTRANT"])
 
+    if env["sndio"]:
+        if os.system("pkg-config --exists sndio") == 0:  # 0 means found
+            print("Enabling sndio")
+            env.Append(CPPDEFINES=["SNDIO_ENABLED"])
+            env.ParseConfig("pkg-config --cflags --libs sndio")
+
     if env["dbus"]:
         if not env["use_sowrap"]:
             if os.system("pkg-config --exists dbus-1") == 0:  # 0 means found
@@ -439,7 +446,7 @@ def configure(env: "Environment"):
             env.ParseConfig("pkg-config vulkan --cflags --libs")
         if not env["builtin_glslang"]:
             # No pkgconfig file so far, hardcode expected lib name.
-            env.Append(LIBS=["glslang", "SPIRV"])
+            env.Append(LIBS=["glslang", "SPIRV", "glslang-default-resource-limits"])
 
     if env["opengl3"]:
         env.Append(CPPDEFINES=["GLES3_ENABLED"])
