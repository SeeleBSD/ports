Index: crypto/poly1305/asm/poly1305-x86_64.pl
--- crypto/poly1305/asm/poly1305-x86_64.pl.orig
+++ crypto/poly1305/asm/poly1305-x86_64.pl
@@ -227,6 +227,7 @@ $code.=<<___;
 .align	32
 poly1305_blocks:
 .cfi_startproc
+	endbranch
 .Lblocks:
 	shr	\$4,$len
 	jz	.Lno_data		# too short
@@ -301,6 +302,7 @@ $code.=<<___;
 .align	32
 poly1305_emit:
 .cfi_startproc
+	endbranch
 .Lemit:
 	mov	0($ctx),%r8	# load hash value
 	mov	8($ctx),%r9
@@ -522,6 +524,7 @@ __poly1305_init_avx:
 .align	32
 poly1305_blocks_avx:
 .cfi_startproc
+	endbranch
 	mov	20($ctx),%r8d		# is_base2_26
 	cmp	\$128,$len
 	jae	.Lblocks_avx
@@ -1382,6 +1385,7 @@ $code.=<<___;
 .align	32
 poly1305_emit_avx:
 .cfi_startproc
+	endbranch
 	cmpl	\$0,20($ctx)	# is_base2_26?
 	je	.Lemit
 
@@ -1446,6 +1450,7 @@ $code.=<<___;
 .align	32
 poly1305_blocks_avx2:
 .cfi_startproc
+	endbranch
 	mov	20($ctx),%r8d		# is_base2_26
 	cmp	\$128,$len
 	jae	.Lblocks_avx2
@@ -2142,6 +2147,7 @@ $code.=<<___;
 .align	32
 poly1305_blocks_avx512:
 .cfi_startproc
+	endbranch
 .Lblocks_avx512:
 	mov		\$15,%eax
 	kmovw		%eax,%k2
@@ -2806,6 +2812,7 @@ $code.=<<___;
 .align	32
 poly1305_blocks_vpmadd52:
 .cfi_startproc
+	endbranch
 	shr	\$4,$len
 	jz	.Lno_data_vpmadd52		# too short
 
@@ -3739,6 +3746,7 @@ $code.=<<___;
 .align	32
 poly1305_emit_base2_44:
 .cfi_startproc
+	endbranch
 	mov	0($ctx),%r8	# load hash value
 	mov	8($ctx),%r9
 	mov	16($ctx),%r10
@@ -3774,6 +3782,7 @@ poly1305_emit_base2_44:
 ___
 }	}	}
 $code.=<<___;
+.rodata
 .align	64
 .Lconst:
 .Lmask24:
@@ -3810,6 +3819,7 @@ ___
 $code.=<<___;
 .asciz	"Poly1305 for x86_64, CRYPTOGAMS by <appro\@openssl.org>"
 .align	16
+.previous
 ___
 
 {	# chacha20-poly1305 helpers
